<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.mapper.UserMapper">
    <select id="checkUsername" parameterType="String" resultType="Integer">
    select count(*) from user where name=#{username};
  </select>

    <select id="checkEmail" parameterType="String" resultType="Integer">
    select count(*) from user where email=#{email};
  </select>

    <insert id="saveUser" parameterType="User">
    insert into user (name, sex, birthday,
      hobby, settle, email,
      password, activeCode,
      introdution)
    values (#{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR},
      #{hobby,jdbcType=VARCHAR}, #{settle,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{activeCode,jdbcType=VARCHAR},
      #{introdution,jdbcType=LONGVARCHAR})
  </insert>

    <select id="checkByEmailAndCode" resultType="Integer">
    select count(*) from user where email=#{email,jdbcType=VARCHAR} and activeCode=#{activeCode,jdbcType=VARCHAR};
  </select>

    <update id="updateStatusTo1" parameterType="String">
    update user set status=1 where email=#{email,jdbcType=VARCHAR};
  </update>

    <select id="checkByNameAndPassword" resultType="java.util.Map">
    select id,name,count(*) as count,status from user where name=#{name,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR};
  </select>

    <select id="checkByEmailAndPassword" resultType="java.util.Map">
    select id,name,count(*) as count,status from user where email=#{email,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR};
  </select>

  <select id="findEmailByName" resultType="String">
    select email from user where name=#{name,jdbcType=VARCHAR};
  </select>

  <update id="updatePasswordByToken" parameterType="String">
    update user set password=#{password,jdbcType=VARCHAR} where activeCode=#{activeCode,jdbcType=VARCHAR};
  </update>

  <select id="selectByPrimaryKey" resultType="com.book.entity.User" parameterType="java.lang.Integer" >
    select
    id, name, sex, birthday, hobby, settle, email, activeCode, status, introdution
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKeyAndPwd" resultType="com.book.entity.User">
    select
    id, name, sex, birthday, hobby, settle, introdution
    from user
    where id = #{id,jdbcType=INTEGER} and password=#{password,jdbcType=VARCHAR};
  </select>

  <resultMap id="BaseResultMap" type="com.book.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="hobby" property="hobby" jdbcType="VARCHAR" />
    <result column="settle" property="settle" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="activeCode" property="activeCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.book.entity.User" extends="BaseResultMap" >
    <result column="introdution" property="introdution" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, birthday, hobby, settle, email, password, activeCode, status
  </sql>
  <sql id="Blob_Column_List" >
    introdution
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.entity.User" >
    insert into user (id, name, sex,
      birthday, hobby, settle,
      email, password, activeCode,
      status, introdution)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
      #{birthday,jdbcType=VARCHAR}, #{hobby,jdbcType=VARCHAR}, #{settle,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{activeCode,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{introdution,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.book.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="hobby != null" >
        hobby,
      </if>
      <if test="settle != null" >
        settle,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="activeCode != null" >
        activeCode,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="introdution != null" >
        introdution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="settle != null" >
        #{settle,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="activeCode != null" >
        #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="introdution != null" >
        #{introdution,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.entity.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null" >
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="settle != null" >
        settle = #{settle,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="activeCode != null" >
        activeCode = #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="introdution != null" >
        introdution = #{introdution,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.book.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      settle = #{settle,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      activeCode = #{activeCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      introdution = #{introdution,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      settle = #{settle,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      activeCode = #{activeCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>