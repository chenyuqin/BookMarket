<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.mapper.BookMapper">
    <sql id="Base_List">
    id, `name`, publishTime, category, biggestCate, biggerCate, bigCate, `describe`, author,
    publisher, star, price, prePrice, discount, stock, sales, remark, image1, image2,
    image3, image4, image5, paper, packing, suit, ISBN, detail, contentSummary, authorSummary, `catalog`, groundingTime
  </sql>
    <select id="getBookById" resultType="com.book.entity.Book">
        select
        <include refid="Base_List"/>
        from book where id=#{id,jdbcType=INTEGER};
    </select>

    <select id="getCount" resultType="Integer">
    select count(1) from book;
  </select>

    <select id="getTenNewBook" resultType="com.book.DTO.NewBookSaleDto">
    select id,`name`,author,price,prePrice,image1 from book order by groundingTime desc limit 10;
  </select>

    <select id="getDiscountBook" parameterType="java.lang.Integer" resultType="com.book.entity.Book">
      select
        <include refid="Base_List"/>
      from discount_book
      where
        category=#{type}
      order by groundingTime desc limit 10;
    </select>

    <select id="getDiscountBookAll" resultType="com.book.entity.Book">
        select
        <include refid="Base_List"/>
        from discount_book
        order by groundingTime desc limit 10;
    </select>

    <select id="getSaleRankBook" parameterType="java.lang.Integer" resultType="com.book.entity.Book">
        select
        <include refid="Base_List"/>
        from book
        where
        category=#{type}
        order by sales desc limit 10;
    </select>

    <select id="getSaleRankBookAll" resultType="com.book.entity.Book">
        select
        <include refid="Base_List"/>
        from book
        order by sales desc limit 10;
    </select>

    <select id="getSameCateBook" parameterType="Map" resultType="com.book.DTO.SameCateBookDto">
        select id,name,author,price,image1 from book where biggerCate=#{biggerCate} and id>=(SELECT floor(RAND() * (SELECT MAX(id) FROM book))) and id!=#{id} order by id limit 5;
    </select>

    <select id="searchByCate" resultType="com.book.DTO.SearchByCateBookDto">
        select id,name,detail,price,discount,prePrice,star,remark,image1 from book
        <where>
            <if test="category != null" >
                and category=#{category,jdbcType=INTEGER}
            </if>
            <if test="biggestCate != 'null'" >
                and biggestCate=#{biggestCate,jdbcType=VARCHAR}
            </if>
            <if test="biggerCate != 'null'" >
                and biggerCate=#{biggerCate,jdbcType=VARCHAR}
            </if>
            <if test="bigCate != 'null'" >
                and bigCate=#{bigCate,jdbcType=VARCHAR}
            </if>
        </where>
        limit 15;
    </select>

    <!--找到某具体分类下的子分类-->
    <select id="getSubCateByC1" resultType="String">
        select biggerCate from book where category=#{category,jdbcType=INTEGER} and biggestCate=#{biggestCate,jdbcType=VARCHAR} group by biggerCate;
    </select>

    <select id="getSubCateByC2" resultType="String">
        select bigCate from book where category=#{category,jdbcType=INTEGER} and biggestCate=#{biggestCate,jdbcType=VARCHAR} and biggerCate=#{biggerCate,jdbcType=VARCHAR} group by bigCate;
    </select>

    <!--找到某具体分类下的所有书籍的出版社-->
    <select id="getPublishers" resultType="String">
        select publisher from book
        <where>
            <if test="category != null" >
                and category=#{category,jdbcType=INTEGER}
            </if>
            <if test="biggestCate != 'null'" >
                and biggestCate=#{biggestCate,jdbcType=VARCHAR}
            </if>
            <if test="biggerCate != 'null'" >
                and biggerCate=#{biggerCate,jdbcType=VARCHAR}
            </if>
            <if test="bigCate != 'null'" >
                and bigCate=#{bigCate,jdbcType=VARCHAR}
            </if>
        </where>
        group by publisher order by count(*) desc limit 40;
    </select>

    <!--找到某具体分类下的所有书籍的作者-->
    <select id="getAuthors" resultType="String">
        select author from book
        <where>
            <if test="category != null" >
                and category=#{category,jdbcType=INTEGER}
            </if>
            <if test="biggestCate != 'null'" >
                and biggestCate=#{biggestCate,jdbcType=VARCHAR}
            </if>
            <if test="biggerCate != 'null'" >
                and biggerCate=#{biggerCate,jdbcType=VARCHAR}
            </if>
            <if test="bigCate != 'null'" >
                and bigCate=#{bigCate,jdbcType=VARCHAR}
            </if>
        </where>
        group by author order by count(*) desc limit 40;
    </select>

    <select id="getCountByCate" resultType="Integer">
        select count(1) from book
        <where>
            <if test="category != null" >
                and category=#{category,jdbcType=INTEGER}
            </if>
            <if test="biggestCate != 'null'" >
                and biggestCate=#{biggestCate,jdbcType=VARCHAR}
            </if>
            <if test="biggerCate != 'null'" >
                and biggerCate=#{biggerCate,jdbcType=VARCHAR}
            </if>
            <if test="bigCate != 'null'" >
                and bigCate=#{bigCate,jdbcType=VARCHAR}
            </if>
        </where>
        ;
    </select>
</mapper>